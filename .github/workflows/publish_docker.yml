# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Publish:
    # The type of runner that the job will run on
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v3
      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
         registry: ${{ secrets.REGISTRY }}
         username: ${{ secrets.REGISTRY_USERNAME }}
         password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Create .env file
        run: |
          touch .env
          echo JDBC_DATABASE_URL=${{ secrets.JDBC_DATABASE_URL }} >> .env
          echo JDBC_DATABASE_USERNAME=${{ secrets.JDBC_DATABASE_USERNAME }} >> .env
          echo JDBC_DATABASE_PASSWORD=${{ secrets.JDBC_DATABASE_PASSWORD }} >> .env
          
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          
          echo SMTP_SERVER=${{ secrets.SMTP_SERVER }} >> .env
          echo SMTP_USERNAME=${{ secrets.SMTP_USERNAME }} >> .env
          echo SMPT_PASSWORD=${{ secrets.SMPT_PASSWORD }} >> .env
          
          echo RESSOURCE_SERVER=${{ secrets.RESSOURCE_SERVER }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env

      - name: Build and push Frontend
        uses: docker/build-push-action@v3
        with:
          context: ./WebshopFrontend
          file: ./WebshopFrontend/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY }}/frontend
          
      - name: Build and push User Backend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./UserAndAuthBackend/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY }}/userbackend
          
      - name: Build and push Shop Backend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./WebshopBackend/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY }}/shopbackend
          
